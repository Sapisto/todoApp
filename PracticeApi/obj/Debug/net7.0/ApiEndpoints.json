[
  {
    "ContainingType": "PracticeApi.Controllers.TodoController",
    "Method": "CreateTodo",
    "RelativePath": "api/Todo/createTodos",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "todoCreateRequest",
        "Type": "PracticeApi.Domain.DTO.TodoDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeApi.Controllers.TodoController",
    "Method": "DeleteTodo",
    "RelativePath": "api/Todo/delete-todo/{todoId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "todoId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeApi.Controllers.TodoController",
    "Method": "GetOverdueTodos",
    "RelativePath": "api/Todo/get-overdue-todos",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeApi.Controllers.TodoController",
    "Method": "GetTodoById",
    "RelativePath": "api/Todo/get-todo-by-id/{todoId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "todoId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeApi.Controllers.TodoController",
    "Method": "GetTodos",
    "RelativePath": "api/Todo/getTodos",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "title",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "isCompleted",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeApi.Domain.DTO.PagedResponse\u00601[[System.Collections.Generic.List\u00601[[PracticeApi.Domain.DTO.TodoResponseDto, PracticeApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PracticeApi.Controllers.TodoController",
    "Method": "UpdateTodo",
    "RelativePath": "api/Todo/update-todo/{todoId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "todoId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "todoUpdateRequest",
        "Type": "PracticeApi.Domain.DTO.TodoUpdateRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeApi.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/User/delete-user/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeApi.Controllers.UserController",
    "Method": "GetAllUsers",
    "RelativePath": "api/User/get-all-users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeApi.Controllers.UserController",
    "Method": "GetUserById",
    "RelativePath": "api/User/get-user-by-id/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeApi.Controllers.UserController",
    "Method": "Login",
    "RelativePath": "api/User/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userLoginRequest",
        "Type": "PracticeApi.Domain.DTO.UserLoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeApi.Controllers.UserController",
    "Method": "Register",
    "RelativePath": "api/User/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userRegistrationRequest",
        "Type": "UserRegistrationRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeApi.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/update-user/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "userUpdateRequest",
        "Type": "PracticeApi.Domain.DTO.UserUpdateRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]